import * as React from "react";
import "./style.css";

interface IconButtonProps {
  className?: string;
  icon: string;
  color?: "primary" | "secondary" | "default" | "danger";
  size?: "xs" | "sm" | "lg" | "xl" | "xxl";
  title?: string | JSX.Element;
  disabled?: boolean;
  vertical?: boolean;
  raised?: boolean;
  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;
}

const IconButton: React.FunctionComponent<IconButtonProps> = props => {
  const { className, icon, color, title, disabled, onClick, vertical, size, raised } = props;

  const buttonColorClass = `icn-btn-color-${color || "default"}`;
  const iconClass = `icn icn-${icon} icn-${size || "xs"} ` + (!disabled && buttonColorClass);
  const buttonClasses = ["icon-button"];
  const raisedClass = `icn-btn-raised-color-${color || "default"}`;

  if (className) {
    buttonClasses.push(className);
  }

  if (disabled) {
    buttonClasses.push("icon-button__disabled");
  } else {
    buttonClasses.push(buttonColorClass);
  }

  if (raised) {
    buttonClasses.push(raisedClass);
  }

  if (vertical) {
    buttonClasses.push("icon-button__vertical");
  }

  return (
    <button
      className={buttonClasses.join(" ")}
      onClick={e => {
        console.log(e);
        onClick(e);
      }}
      disabled={disabled}
    >
      {vertical ? (
        <React.Fragment>
          <div className={iconClass} />
          <div>{title}</div>
        </React.Fragment>
      ) : (
        <React.Fragment>
          <span className={iconClass} />
          <span>{title}</span>
        </React.Fragment>
      )}
    </button>
  );
};

export default IconButton;
